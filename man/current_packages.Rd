% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/current_packages.R
\name{current_packages}
\alias{current_packages}
\alias{imported_functions}
\alias{is_dev_context}
\title{Get packages from the current context}
\usage{
current_packages(
  dir = ".",
  base_packages = getOption("defaultPackages"),
  dev_context = is_dev_context(),
  include_types = "Imports"
)

imported_functions(dir = ".")

is_dev_context(dir = ".")
}
\arguments{
\item{dir}{The current working directory}

\item{base_packages}{Default packages to include}

\item{dev_context}{Is the current context package development?}

\item{include_types}{The types of package imports to return if the current
context is package development. Should be a subset of
\code{c("Imports", "Depends", "Suggests", "Enhances", "LinkingTo")}}
}
\description{
These functions find the packages/functions to use when running
\code{add_double_colons()}.
}
\details{
\itemize{
\item New behaviour:
\itemize{
\item Should check a global option
\item Then any \code{library()} calls
\item Then the \code{DESCRIPTION} file
\item Then use search path - but you should have to opt in to this because
it can easily go wrong.
\item Should be much chattier
}
\item \code{current_packages()} first checks if the current context is package
development. If it is, then it returns the packages which are listed in the
package \code{DESCRIPTION} as dependencies, but will not return any packages also
listed as imports in the package \code{NAMESPACE}. If the current context is not
package development, the currently attached packages (as given by \code{search()})
are used. Note that if \code{{pkgload}} is not installed then the latter option is
always used.
\item \code{imported_functions()} looks for a package \code{NAMESPACE} file and returns the
names of all imported functions. If a \code{NAMESPACE} file is not found, or if
\code{{pkgload}} is not loaded, \code{NULL} is returned.
}
}
